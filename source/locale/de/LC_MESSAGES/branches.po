# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, GitExtensions
# This file is distributed under the same license as the GitExtensions package.
# 
# Translators:
# Mike <michaelbenz@gmx.net>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Git Extensions Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-24 21:53+0300\n"
"PO-Revision-Date: 2016-10-05 15:39+0000\n"
"Last-Translator: Mike <michaelbenz@gmx.net>\n"
"Language-Team: German (http://www.transifex.com/git-extensions/git-extensions-manual/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ..\branches.rst:2
msgid "Branches"
msgstr "Branches"

#: ..\branches.rst:7
msgid ""
"Branches are used to commit changes separate from other commits. It is very "
"common to create a new branch when you start working on a feature to keep "
"the work done on that feature separate from other work. When the feature is "
"complete the branch can be merged or rebased as you choose such that the "
"commits for the feature either remain as a parallel branch or appear as a "
"continuous single line of development as if the branch had never existed in "
"the first place. The image on the right illustrates a branch created on top "
"of commit B."
msgstr "Branches werden verwendet, um Änderungen getrennt von anderen Änderungen zu comitten. Es ist üblich einen neuen Branch zu erstellen wenn an einem Feature gearbeitet wird, um die Arbeit an diesem Feature getrennt von der sonstigen Arbeit zu halten. Wenn das Feature komplett umgesetzt wurde kann der ganze Branch gemerged oder gerebased werden, damit die Änderungen entweder als paralleler Branch erhalten bleiben oder als ununterbrochene Linie der Entwicklung angezeigt werden als wie wenn der Branch nie existiert hätte. Das Bild auf der rechten illustriert einen Branch der auf Commit erstellt wurde."

#: ..\branches.rst:13
msgid ""
"You can see the name of your current branch in a combo box in the toolbar. "
"You can switch to another branch by choosing from the combo box list. In the"
" commit log the current branch has an arrow head to the left of its name. If"
" you are not currently on a branch because you have checked out a specific "
"commit but not any particular branch then Git Extensions will show ``(no "
"branch)`` in place of a branch name in the toolbar. This is called "
"\"Detached HEAD mode\". In Git you can refer to your current branch or "
"commit by the special reference ``HEAD`` in place of the branch name or "
"commit reference."
msgstr "Sie können den Namen des aktuellen Branches in einer Combobox in einer Toolbar sehen. Sie können zu einem anderen Branch wechseln aus der Liste in der Combobox. Im Commit Log hat der aktuelle Branch einen Pfeilkopf links vom Namen. Wenn Sie sich gerade nicht auf einem Branch befinden weil Sie einen bestimmten Commit aber keinen konkreten Branch ausgecheckt hatten zeigt Git Extensions ``(kein Branch)`` anstelle eines Branchnamens in der Toolbar. Das wird auch \"Detached HEAD Modus\". In Git können sie den aktuellen Branch oder Commit mit der Spezialreferenz ``HEAD`` anstatt des Branchnamens oder Commits referenzieren."

#: ..\branches.rst:23
msgid "Create branch"
msgstr "Branch erzeugen"

#: ..\branches.rst:25
msgid ""
"In Git Extensions there are multiple ways to create a new branch. In the "
"image below I create a new branch from the context menu in the commit log. "
"This will create a new branch on the revision that is selected."
msgstr "In Git Extensions gibt es mehrere Möglichkeiten einen neuen Branch zu erstellen. Im folgenden Bild erstellen ich einen Branch aus dem Kontextmenü des Commit Logs. Das erzeugt einen neuen Branch auf der Revision die ausgewählt wurde."

#: ..\branches.rst:30
msgid ""
"I will create a new branch called ``Refactor``. In this branch I can do "
"whatever I want without affecting others. The default in Git Extensions is "
"to check out a new branch after it is created. If you want to create a new "
"branch but remain on your current branch, uncheck the ``Checkout after "
"create`` checkbox in the ``Create branch`` dialog."
msgstr "Ich erzeuge einen neuen Branch namens ``Refactor``. In diesem Branch kann ich machen was auch immer ich will ohne andere zu beeinflussen. Der Standard in Git Extensions ist einen neu erstellten Branch nach der Erstellung auszuchecken. Wenn Sie einen neuen Branch erstellen wollen aber auf dem aktuellen Branch bleiben wollen, entfernen Sie die Markierung neben der Einstellung ``Checkout nach Erstellung`` im ``Branch erstellen`` Dialog."

#: ..\branches.rst:36
msgid ""
"When the branch is created you will see the new branch ``Refactor`` in the "
"commit log. If you chose to checkout this branch the next commit will be "
"committed to the new branch."
msgstr "Nachdem der Branch erstellt wurde sehen Sie einen neuen Branch ``Refactor`` im Commit Log. Wenn Sie sich entscheiden diesen Branch auszuchecken wird der nächste Commit auf diesem neuen Branch comittet werden."

#: ..\branches.rst:41
msgid ""
"Creating branches in Git requires only 41 bytes of space in the repository. "
"Creating a new branch is very easy and fast. The complete work flow of Git "
"is optimized for branching and merging."
msgstr "Einen neuen Branch in Git zu erstellen erfordert nur 41 Bytes Platz im Repository. Die Erstellung eines neuen Branches ist sehr einfach und schnell. Der gesamte Workflow von Git ist optimiert auf die Erstellung von Branches und das Mergen von Branchen."

#: ..\branches.rst:45
msgid "Orphan branches"
msgstr "Verwaiste Branches"

#: ..\branches.rst:46
msgid ""
"In special cases it is helpful to have orphan branches (see for example "
"https://www.google.com/search?q=why+use+orphan+branches+in+git). Check the "
"\"Create orphan\" checkbox to create an orphan branch (``--orphan`` option "
"in git)."
msgstr "In Spezialfällen ist es nützlich verwaiste Zweige zu haben (für Beispiele https://www.google.com/search?q=why+use+orphan+branches+in+git). Markieren Sie die Checkbox \"Orphan erstellen\", um einen verwaisten Branch zu erstellen (``--orphan`` Option in Git)."

#: ..\branches.rst:49
msgid "The newly created branch will have no parent commits."
msgstr "Der neu erstellte Branch wird keine Commits als Eltern haben."

#: ..\branches.rst:51
msgid ""
"The option \"Clear working dir and index\" (``git rm -rf``) is active by "
"default. So the working dir and index will be cleared. If you uncheck the "
"last option then the working dir and index will not be touched."
msgstr "Die Option \"Lösche Arbeitsverzeichnis und Index\" (``git rm -rf``) ist im Standard aktiv. Damit werden das Arbeitsverzeichnis und der Index gelöscht. Wenn Sie die letzte Option abwählen werden das Arbeitsverzeichnis und der Index nicht angefasst"

#: ..\branches.rst:55
msgid "Checkout branch"
msgstr "Branch auschecken"

#: ..\branches.rst:57
msgid ""
"You can switch from the current branch to another branch using the checkout "
"command. Checking out a branch sets the current branch and updates all of "
"the source files in the working directory. Uncommitted changes in the "
"working directory can be overwritten so it is best practice to make sure "
"your working directory is clean by either committing or stashing any current"
" changes before checking out a branch. If you do not clean your working "
"directory then, in the ``Checkout branch`` dialog, you can choose between "
"four options for your local uncommitted changes:"
msgstr "Sie können mit dem checkout Befehl zwischen dem aktuellen Branch und einem anderen wechseln. Der Checkout eines Branches setzt den aktuellen Branch und aktualisiert alle Quelldateien im aktuellen Arbeitsverzeichnis. Nicht-comittete Änderungen im aktuellen Arbeitsverzeichnis können überschrieben werden weshalb es anzuraten ist das aktuelle Arbeitsverzeichnis sauber vorzuhalten, indem vorher entweder Änderungen vor dem Auschecken entweder comittet werden oder per Stash Befehl auf die Seite geräumt. Wenn Sie das aktuelle Arbeitsverzeichnis nicht säubern, werden Ihnen im Dialog ``Branch auschecken`` vier Möglichkeiten angeboten wie mit den lokalen nicht-comitteten Änderungen verfahren werden soll:"

#: ..\branches.rst:64
msgid "``Don't change``"
msgstr "``Nicht ändern``"

#: ..\branches.rst:64
msgid ""
"Local changes will be retained if there are not conflicting changes from the"
" branch you are checking out."
msgstr "Lokale Änderungen werden behalten wenn es keine widersprüchlichen Änderungen von dem Branch den sie auschecken wollen gibt."

#: ..\branches.rst:66
msgid "``Merge``"
msgstr "``Merge``"

#: ..\branches.rst:66
msgid ""
"Performs a three-way merge between your current branch, your local changes "
"and the branch you are checking out."
msgstr "Führt einen 3-Wege-Merge aus zwischen ihrem aktuellen Branch, den lokalen Änderungen und dem Branch den Sie auschecken aus."

#: ..\branches.rst:68
msgid "``Stash``"
msgstr "``Stash``"

#: ..\branches.rst:68
msgid ""
"Your local changes are stashed and the new branch is checked out. You can "
"retrieve your changes on the new branch with stash-pop."
msgstr "Ihre lokalen Änderungen werden gestashed und der neue Branch wird ausgecheckt. Sie können versuchen Ihre Änderungen auf dem neuen Branch anzuwenden mit stash-pop."

#: ..\branches.rst:70
msgid "``Reset``"
msgstr "``Reset``"

#: ..\branches.rst:70
msgid ""
"Your local changes are discarded and the new branch is checked out. Use "
"caution with this option as Git has no record of uncommitted changes so they"
" cannot be retrieved."
msgstr "Ihre lokalen Änderungen werden verworfen und der neue Branch wird ausgecheckt. Verwenden Sie diese Option mit Vorsicht, da Git keine Einträge für nicht-comittete Änderungen vorhält und diese nicht zurückgeholt werden können."

#: ..\branches.rst:76
msgid "Merge branches"
msgstr "Branches mergen"

#: ..\branches.rst:78
msgid ""
"In the image below there are two branches, ``[Refactor]`` and ``[master]``. "
"We can merge the commits from the master branch into the Refactor branch. If"
" we do this, the Refactor branch will be up to date with the master branch, "
"but not the other way around. As long as we are working on the Refactor "
"branch we cannot touch the master branch itself. We can merge the sources of"
" master into our branch, but cannot make any change to the master branch."
msgstr "Im folgenden Bild werden zwei Branches angezeigt, ``[Refactor]`` und ``[master]``. Wir können die Commits vom master Branch in den Refactor Branch mergen. Wenn wir das machen ist der Refactor Branch mit dem master Branch up-to-date aber nicht in der anderen Richtung. So lange wir auf dem Refactor Branch arbeiten, können wir den master Branch selbst nicht anfassen. Wir können die Quelldateien von master in unseren Branch mergen, aber keine Änderungen am master Branch vornehmen."

#: ..\branches.rst:85
msgid ""
"To merge the Refactor branch into the master branch, we first need to switch"
" to the master branch."
msgstr "Um den Refactor Branch in den master Branch zu mergen, müssen wir zuerst in den master Branch wechseln."

#: ..\branches.rst:89
msgid ""
"Once we are on the master branch we can choose merge by choosing ``Merge "
"branches`` from the ``Commands`` menu. In the merge dialog you can verify "
"which branch you are working on. Select the branch to merge with then click "
"the ``Merge`` button."
msgstr "Wenn wir auf dem master Branch sind können wir uns für einen Merge entscheiden, indem wir ``Branches mergen`` aus dem Menü ``Befehle`` wählen. im Merge Dialog können sie verifizieren welchen Branch sie gerade zur Bearbeitung geöffnet haben. Wählen Sie den Branch zum Mergen aus und klicken Sie auf den ``Merge`` Button."

#: ..\branches.rst:94
msgid ""
"After the merge the commit log will show the new commit containing the "
"merge. Notice that the Refactor branch is not changed by this merge. If you "
"want to continue working on the Refactor branch you can merge the Refactor "
"branch with master. You can instead delete the Refactor branch if it is not "
"used anymore."
msgstr "Nach dem Merge zeigt das Commit Log die neuen Commits die den Merge enthalten. Beachten Sie dass der Refactor Branch durch diesen Merge nicht verändert wird. Wenn sie weiter mit dem Refactor Branch arbeiten wollen, können sie den Refactor Branch mit master mergen. Sie können auch den Refactor Branch löschen wenn er nicht mehr benötigt wird."

#: ..\branches.rst:102
msgid ""
"When you need to merge with an unnamed branch you can use a tag to give it a"
" temporary name."
msgstr "Wenn Sie mit einen unbenannten Branch mergen müssen, können Sie einen Tag verwenden um ihm einen temporären Namen zu geben."

#: ..\branches.rst:105
msgid "Rebase branch"
msgstr "Branch rebasen"

#: ..\branches.rst:107
msgid ""
"The rebase command is the most complex command in Git. The rebase command is"
" very similar to the merge command. Both rebase and merge are used to get a "
"branch up-to-date. The main difference is that rebase can be used to keep "
"the history linear contrary to merges."
msgstr "Der rebase Befehl ist der komplexeste Befehl in Git. Der rebase Befehl ist dem merge Befehl sehr ähnlich. Beide rebase und merge werden verwendet, um einen Branch up-to-date zu halten. Der Hauptunterschied ist das rebase kann verwendet werden um die Historie linear zu halten im Gegensatz zum merge Befehl."

#: ..\branches.rst:113
msgid ""
"A rebase of Refactor on top of master will perform the following actions:"
msgstr "Ein rebase von Refactor auf master wird die folgenden Aktionen ausführen:"

#: ..\branches.rst:115
msgid ""
"All commits specific to the Refactor branch will be stashed in a temporary "
"location"
msgstr "Alle Commits die spezifisch aus dem Refactor Branch werden an einer temporären Stelle gespeichert."

#: ..\branches.rst:116
msgid "The branch Refactor will be removed"
msgstr "Der Branch Refactor wird entfernt."

#: ..\branches.rst:117
msgid "The branch Refactor will be recreated on the master branch"
msgstr "Der Refactor Branch wird auf dem master Branch erstellt"

#: ..\branches.rst:118
msgid "All commits will be recommitted in the new Refactor branch"
msgstr "Alle Commits werden in dem neuen Refactor Branch erneut comittet"

#: ..\branches.rst:120
msgid ""
"During a rebase merge conflicts can occur. You need to solve the merge "
"conflicts for each commit that is rebased. The rebase function in Git "
"Extensions will guide you through all steps needed for a successful rebase."
msgstr "Während eines rebase können Mergekonflikte entstehen. Sie müssen diese Mergekonflikte für jeden Commit lösen der rebased wird. Die rebase Funktion in GIt Extensions wird Sie durch alle nötigen Schritte für einen erfolgreichen rebase führen."

#: ..\branches.rst:125
msgid ""
"The image below shows the commit log after the rebase. Notice that the "
"history is changed and it seems like the commits on the Refactor branch are "
"created after the commits on the master branch."
msgstr "Das folgende Bild zeigt den Commit Log nach dem rebase. Beachten Sie dass die Historie verändert wurde und es scheint als ob die Commits auf dem Refactor Branch nach den Commits auf dem master Branch erzeugt wurden."

#: ..\branches.rst:132
msgid ""
"Because this function rewrites history you should only use this on branches "
"that are not published to other repositories yet. When you rebase a branch "
"that is already pushed it will be harder to pull or push to that remote. If "
"you want to get a branch up-to-date that is already published you should "
"merge."
msgstr "Weil diese Funktion die Historie neu schreibt sollten Sie sie nur auf Branches verwenden die noch nicht in anderen Repositories veröffentlicht wurden. Wenn Sie einen Branch rebasen der schon gepushed wurde wird es schwieriger zu dieser Remote zu pushen oder davon zu pullen. Wenn Sie einen Branch up-to-date bringen wollen der schon veröffentlich wurde sollten Sie mergen."

#: ..\branches.rst:137
msgid "Delete branch"
msgstr "Branch Löschen"

#: ..\branches.rst:139
msgid ""
"Since it is common to create many branches, it is often necessary to delete "
"branches. Most commonly you will need to delete branches on which work has "
"finished and their contents are merged into master or your main branch. You "
"can also delete unmerged branches when they are not needed anymore and you "
"do not want to keep the work done in that branch."
msgstr "Weil es so üblich ist so viele Branches zu erzeugen ist es oft notwendig auch Branches wieder zu löschen. Üblicherweise werden Sie Branches löschen an denen die Arbeit beendet wurde und deren Inhalt in den master oder ihren Haupt-Branch gemergt wurde. Sie können auch nicht germergte Branches löschen wenn diese nicht mehr benötigt werden und die Arbeit in diesem Zweig nicht aufgehoben werden soll."

#: ..\branches.rst:143
msgid ""
"When you delete a branch that is not yet merged, all of the commits that are"
" in only the deleted branch will be lost. When you delete a branch that is "
"already merged with another branch, the merged commits will not be lost "
"because they are also part of another branch."
msgstr "Wenn Sie einen Branch löschen der nicht gemerged wurden, gehen alle Commits die sich nur in dem gelöschten Branch befinden verloren. Wenn Sie einen Branch löschen der schon mit einem anderen Branch gemerged wurde, gehen die gemergten Commits nicht verloren weil diese auch Teil eines anderen Branches sind."

#: ..\branches.rst:147
msgid ""
"You can delete a branch using ``Delete branch`` from the ``Commands`` menu. "
"If you want to delete a branch that is not merged into your current branch "
"(``HEAD`` in Git), you need to check the ``Force delete`` checkbox."
msgstr "Sie können einen Branch löschen mit ``Branch löschen`` aus dem ``Befehle`` Menü. Wenn Sie einen Branch löschen wollen der nicht in den aktuellen Branch (``HEAD`` in Git) gemergt wurde, müssen Sie die Checkbox ``Force löschen`` anhaken."
