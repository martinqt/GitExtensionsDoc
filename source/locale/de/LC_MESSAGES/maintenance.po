# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, GitExtensions
# This file is distributed under the same license as the GitExtensions package.
# 
# Translators:
# Mike <michaelbenz@gmx.net>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Git Extensions Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-24 21:53+0300\n"
"PO-Revision-Date: 2016-10-04 14:01+0000\n"
"Last-Translator: Mike <michaelbenz@gmx.net>\n"
"Language-Team: German (http://www.transifex.com/git-extensions/git-extensions-manual/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ..\maintenance.rst:2
msgid "Maintenance"
msgstr "Wartung"

#: ..\maintenance.rst:4
msgid ""
"In this chapter some of the functions to maintain a repository are "
"discussed."
msgstr "In diesem Kapitel werden einige der Funktionen zur Wartung des Repository diskutiert."

#: ..\maintenance.rst:7
msgid "Compress Git database"
msgstr "Git Datenbank komprimieren"

#: ..\maintenance.rst:9
msgid ""
"Git will create a lot of files. You can run the ``Compress git database`` to"
" pack all small files building up a repository into one big file. Git will "
"also garbage collect all unused objects that are older then 15 days. When a "
"database is fragmented into a many small files compressing the database can "
"increase performance."
msgstr "Git wird viele Dateien erstellen. Sie können den Befehl ``Git Datenbank komprimieren`` ausführen, um alle kleinen Dateien Dateien aus denen das Repository besteht in eine große Datei zu packen. Git wird zudem alle Dateien die älter als 15 Tage sind einer Garbage Collection unterziehen und ausmisten. Wenn eine Datenbank in viele kleine Dateien fragmentiert ist, kann das komprimieren der Datenbank auch die Performance verbessern."

#: ..\maintenance.rst:16
msgid "Recover lost objects"
msgstr "Verlorene Objekte wiederherstellen"

#: ..\maintenance.rst:18
msgid ""
"If you accidently deleted a commit you can try to recover it using the "
"``Recover lost objects`` function. A dialog will show you all dangling "
"objects and will allow you to review and recover them."
msgstr "Wenn Sie auf Versehen einen Commit löschen, können Sie versuchen ihn mit der Funktion ``Verlorene Objekte wiederherstellen`` wiederherzustellen. Ein Dialog wird Ihnen alle verwaisten Objekte anzeigen und Ihnen erlauben diese durchzugehen und entscheiden sie wiederherzustellen."

#: ..\maintenance.rst:23
msgid ""
"Normally Git will not delete files right away when you remove something from"
" your repository. The reason for this is that you can restore deleted items "
"if you need to. Git will delete removed items when they are older then 15 "
"days and you run ``Compress git database``."
msgstr "Normalerweise wird Git Dateien nicht sofort löschen wenn Sie etwas aus Ihrem Repository entfernen. Der Grund dafür ist dass Sie gelöschte Dateien wiederherstellen können wenn dies nötig sein sollte. Git wird gelöschte Objekte ebenfalls entfernen wenn diese älter als 15 Tage sind und die Aktion ``Git Datenbank komprimieren`` verwendet wurde."

#: ..\maintenance.rst:29
msgid ""
"There are several functions to help you find the lost items. By default Git "
"Extensions will only show commits. To show all items, just uncheck the "
"``Show only commits`` option. The other options can be checked/unchecked to "
"get more/less results. Double-click on on item to view the content. When you"
" located the item you want to recover you can tag it using the ``Tag "
"selected object`` button."
msgstr "Es gibt verschiedene Funktionen die Ihnen helfen verlorene Einträge zu finden. Standardmäßig zeigt Git Extensions nur Commits an. Um alle Einträge zu sehen, wählen Sie die Option ``Nur Commits anzeigen``  ab. Die anderen Optionen können an- oder abgewählt werden um mehr oder weniger Treffer im Ergebnis zu bekommen. Doppelklick auf die Einträge reicht, um den Eintrag anzuzeigen. Wenn Sie einen Eintrag lokalisiert haben der wiederherstellt werden soll, können Sie einen Tag über den Button ``Tagge ausgewähltes Objekt`` anbringen."

#: ..\maintenance.rst:34
msgid ""
"Git Extensions also is able to tag all lost objects. Doing this will make "
"all lost objects visible again making it very easy to locate the commit(s) "
"you would like to recover. After recovering a commit using the ``Tag all "
"lost commits`` button, you can remove all tags using the ``Delete all "
"LOST_AND_FOUND tags`` button."
msgstr "Git Extensions kann auch alle verlorenen Objekte taggen. Wenn das gemacht wird, werden alle verlorenen Objekte wieder sichtbar und es wird sehr einfach den oder die Commit(s) zu lokalisieren sie Sie gerne wiederherstellen wollen. Nachdem Sie einen Commit wiederhergestellt haben können Sie über den Button ``Tagge alle verlorenen Commits`` die Tags wieder entfernen lassen mit dem Button ``Lösche alle LOST_AND_FOUND Tags``."

#: ..\maintenance.rst:41
msgid "Fix user names"
msgstr "Benutzernamen bereinigen"

#: ..\maintenance.rst:43
msgid ""
"When someone accidentally committed using a wrong username this can be fixed"
" using the ``Edit .mailmap`` function. Git will use the username for an "
"email address when it is set in the ``.mailmap`` file."
msgstr "Wenn jemand aus Versehen unter einem falschen Benutzernamen comittet kann dies mit der Funktion ``.mailmap bearbeiten`` bereinigt werden. Git wird den Benutzernamen für eine E-Mail Adresse verwenden wenn dieser in der ``.mailmap`` Datei enthalten ist."

#: ..\maintenance.rst:48
msgid "Fix user name using commit email:"
msgstr "Benutzernamen bereinigen anhand der Commit E-Mail:"

#: ..\maintenance.rst:54
msgid "Fix email address using commit email:"
msgstr "E-Mail Adresse bereinigen anhand der Commit E-Mail:"

#: ..\maintenance.rst:60
msgid "Fix email address and name using commit email:"
msgstr "E-Mail Adresse und Namen bereinigen anhand der Commit E-Mail:"

#: ..\maintenance.rst:66
msgid "Fix email address and name using commit name and email:"
msgstr "E-Mail Adresse und Namen bereinigen anhand des Namens und der E-Mail aus dem Commit:"

#: ..\maintenance.rst:73
msgid "Ignore files"
msgstr "Dateien ignorieren"

#: ..\maintenance.rst:75
msgid ""
"Git will track all files that are in the working directory. Normally you do "
"not want to exclude all files that are created by the compiler. You can add "
"files that should be ignored to the .gitignore file. You can use wildcards "
"and regular expressions. All entries are case sensitive. The button ``Add "
"default ignores`` will add files that should be ignored when using Visual "
"Studio."
msgstr "Git überwacht alle Dateien die sich im Arbeitsverzeichnis befinden. Normalerweise würden Sie gerne alle Dateien ausschließen die vom Compiler erzeugt werden. Sie können Dateien die ignoriert werden sollen der .gitignore Datei hinzufügen. Sie können Wildcards und reguläre Ausdrücke verwenden. Bei allen Einträgen ist die Groß-/Kleinschreibung wichtig. Die Schaltfläche ``Standardmäßig Ignorierte hinzufügen`` wird alle Dateien die bei Verwendung von Visual Studio ignoriert werden sollen hinzufügen."

#: ..\maintenance.rst:81
msgid "A short overview of the syntax:"
msgstr "Ein kurzer Überblick über die Syntax:"

#: ..\maintenance.rst:84
msgid "#"
msgstr "#"

#: ..\maintenance.rst:84
msgid "Lines started with ``#`` are handled as comments"
msgstr "Zeilen die mit ``#`` beginnen werden als Kommentare behandelt"

#: ..\maintenance.rst:86
msgid "!"
msgstr "!"

#: ..\maintenance.rst:86
msgid "Lines started with ``!`` are exclude patterns"
msgstr "Zeilen die mit ``!`` beginnen werden als Muster für Ausschlüsse behandelt"

#: ..\maintenance.rst:88
msgid "[Dd]"
msgstr "[Dd]"

#: ..\maintenance.rst:88
msgid "Characters inside ``[..]`` means that 1 of the characters must match"
msgstr "Zeichen innerhalb eckiger Klammern ``[..]`` bedeuten dass 1 der Zeichen stimmen muss"

#: ..\maintenance.rst:90
msgid "\\*"
msgstr "\\*"

#: ..\maintenance.rst:90
msgid "Wildcard"
msgstr "Wildcard"

#: ..\maintenance.rst:92 ..\maintenance.rst:95
msgid "/"
msgstr "/"

#: ..\maintenance.rst:92
msgid ""
"A leading slash matches the beginning of the pathname; for example, ``/*.c``"
" matches ``cat-file.c`` but not ``mozilla-sha1/sha1.c``"
msgstr "Ein führender Slash identifiziert den Anfang des Pfadnamens; z.B. ``/*.c`` passt auf ``cat-file.c`` aber nicht auf ``mozilla-sha1/sha1.c``"

#: ..\maintenance.rst:95
msgid ""
"If the pattern ends with a slash, it is removed for the purpose of the "
"following description, but it would only find a match with a directory. In "
"other words, foo/ will match a directory foo and paths underneath it, but "
"will not match a regular file or a symbolic link foo (this is consistent "
"with the way how pathspec works in general in git)."
msgstr "Wenn das Muster mit einem Slash endet, wird dieser für den Zweck entfernt nur auf Verzeichnisse zu passen. In anderen Worten wird foo/ nur auf Verzeichnisse oder Pfade darunter zutreffen, aber nicht auf eine reguläre Datei foo oder einen symbolischen Link foo (das stimmt dann überein mit der Art und Weise wie Pfadangaben generell in Git funktionieren)."

#: ..\maintenance.rst:100
msgid ""
"For more `detailed information "
"<http://www.kernel.org/pub/software/scm/git/docs/gitignore.html>`_."
msgstr "Für weitere `detaillierte Informationen: <http://www.kernel.org/pub/software/scm/git/docs/gitignore.html>`_."
